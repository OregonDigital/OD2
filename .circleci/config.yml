version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5-node-browsers
        environment:
          CAPYBARA_APP_HOST: http://test:3001
          FEDORA_URL: http://localhost:8080/fcrepo/rest
          HONEYCOMB_DATASET: od2-rails-test
          HONEYCOMB_DEBUG: 'true'
          HONEYCOMB_WRITEKEY: buzzzzzzzzzzzzzzzz
          HONEYCOMB_SERVICE: od2
          RAILS_ENV: test
          RDS_DB_NAME: test
          RDS_HOSTNAME: localhost
          RDS_PASSWORD: 'postgres'
          RDS_PORT: '5432'
          RDS_USERNAME: postgres
          REDIS_HOST: localhost
          REDIS_PORT: '6379'
          SECRET_KEY_BASE: bobross1234bobross1234bobross1234bobross1234bobross1234
          SOLR_URL: http://localhost:8985/solr/hydra-test
          TRIPLESTORE_ADAPTER_TYPE: blazegraph
          TRIPLESTORE_ADAPTER_URL: http://ci-test:8080/bigdata/namespace/rw/sparql
      - image: circleci/postgres:9.5-alpine-ram
        environment:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      - image: circleci/redis:4
      - image: ualbertalib/docker-fcrepo4:4.7
        environment:
          CATALINA_OPTS: '-Djava.awt.headless=true -Dfile.encoding=UTF-8 -server -Xms512m -Xmx1024m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC'
      - image: solr:7-alpine
        command: bin/solr -cloud -noprompt -f -p 8985
    working_directory: ~/app
    steps:
      - run:
          name: Update Debian Packages
          command: |
            sudo apt-get update -qq
            sudo apt-get upgrade -qq
            sudo apt-get install -y -f software-properties-common build-essential nodejs make apt-utils ffmpeg
            sudo apt-get install -y clamav-freshclam clamav-daemon libclamav-dev
            sudo apt-get install -y openjdk-8-jre-headless ca-certificates-java
            sudo apt-get install -y openjdk-8-jre openjdk-8-jdk openjdk-8-jdk-headless
            sudo apt-get install -y imagemagick graphicsmagick libopenjp2-tools
            sudo update-alternatives --config java
      - run:
          name: Fetch clamav databases
          command: |
            sudo wget -O /var/lib/clamav/main.cvd http://database.clamav.net/main.cvd
            sudo wget -O /var/lib/clamav/daily.cvd http://database.clamav.net/daily.cvd
            sudo wget -O /var/lib/clamav/bytecode.cvd http://database.clamav.net/bytecode.cvd
            sudo chown clamav:clamav /var/lib/clamav/*.cvd
      - checkout
      - restore_cache:
          key: gemfile-{{ checksum "Gemfile.lock" }}
      - run:
          name: Load config into SolrCloud
          command: |
            cd ./config/solr/config
            zip -1 -r solr_hyrax_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_hyrax_config.zip "http://localhost:8985/solr/admin/configs?action=UPLOAD&name=hyrax"
            curl -H 'Content-type: application/json' http://localhost:8985/api/collections/ -d '{create: {name: hydra-test, config: hyrax, numShards: 1}}'
      - run:
          name: Install Ruby Dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run:
          name: Run Rubocop
          command: bundle exec rubocop
      - save_cache:
          key: gemfile-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
            - ./var/lib/clamav
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: Create DB
          command: bundle exec rake db:create db:schema:load --trace
      - run:
          name: Run Tests
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: ./tmp/screenshots
      - store_artifacts:
          path: ./tmp/capybara
