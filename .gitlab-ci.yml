stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  REGISTRY_HOST: registry.gitlab.com
  REGISTRY_URI: /notch8/oregon-digital

before_script:
  - export TAG=${CI_COMMIT_SHORT_SHA}

build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker-compose build --build-arg RAILS_ENV=production --build-arg UID=8083 --build-arg GID=8083 app
    - docker image tag registry.gitlab.com/notch8/oregon-digital/app registry.gitlab.com/notch8/oregon-digital/app:"$CI_COMMIT_SHORT_SHA"
    - docker-compose push app
    - docker push registry.gitlab.com/notch8/oregon-digital/app:"$CI_COMMIT_SHORT_SHA"
  variables:
    RAILS_ENV: production
    DEPLOYED_VERSION: production
  tags:
    - local

solr_build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker-compose build --build-arg UID=8083 --build-arg GID=8083 solr-test
    - docker image tag registry.gitlab.com/notch8/oregon-digital/solr registry.gitlab.com/notch8/oregon-digital/solr:latest
    - docker push registry.gitlab.com/notch8/oregon-digital/solr:latest
  when: manual
  tags:
    - local

blazegraph_build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker-compose build --build-arg UID=8083 --build-arg GID=8083 blazegraph-test
    - docker image tag registry.gitlab.com/notch8/oregon-digital/blazegraph registry.gitlab.com/notch8/oregon-digital/blazegraph:latest
    - docker push registry.gitlab.com/notch8/oregon-digital/blazegraph:latest
  when: manual
  tags:
    - local

chrome_build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker-compose build --build-arg UID=8083 --build-arg GID=8083 chrome
    - docker image tag registry.gitlab.com/notch8/oregon-digital/chrome registry.gitlab.com/notch8/oregon-digital/chrome:latest
    - docker push registry.gitlab.com/notch8/oregon-digital/chrome:latest
  when: manual
  tags:
    - local

rspec:
  stage: test
  image: registry.gitlab.com/notch8/oregon-digital/app:$CI_COMMIT_SHORT_SHA
  services:
    - name: registry.gitlab.com/notch8/oregon-digital/chrome:latest
      alias: selenium-hub
    - name: memcached
      alias: memcache
    - name: postgres:10-alpine
      alias: db-test
    - name: registry.gitlab.com/notch8/oregon-digital/solr:latest # solr:6-alpine
      alias: solr-test
      entrypoint: ["docker-entrypoint.sh", "solr-precreate", "test", "/opt/solr/od2_conf"]
    - name: registry.gitlab.com/notch8/oregon-digital/blazegraph:latest # lyrasis/blazegraph:2.1.5
      alias: blazegraph-test
    - name: ualbertalib/docker-fcrepo4:4.7
      alias: fcrepo-test
    - name: redis:4-alpine
      alias: redis-test
      command: [redis-server]
  script:
    - ./build/validate_migrated.sh
    - ./build/install_gems.sh
    - cd /data
    - puma -b tcp://0.0.0.0:3001 -e test -d
    - export CAPYBARA_APP_HOST=http://`ruby -r socket -e 'puts Socket.ip_address_list.detect { |addr| addr.ipv4_private? }.ip_address'`:3001
    - bundle exec rspec
  variables:
    ACTIVE_JOB_QUEUE_ADAPTER: sidekiq
    AWS_S3_APP_KEY: awss3key
    AWS_S3_APP_SECRET: awsappsecret
    AWS_S3_BUCKET: awss3uploadbucket
    AWS_S3_INGEST_BUCKET: awss3ingestbucket
    AWS_S3_REGION: awss3region
    BROWSEEVERYTHING_FILESYSTEM_PATH: /data/tmp
    CAS_HOST: login.oregonstate.edu
    CAS_URL: https://login.oregonstate.edu/cas
    FEDORA_URL: http://fcrepo-test:8080/fcrepo/rest
    FITS_PATH: /opt/fits-1.0.5/fits.sh
    GEONAMES_USERNAME: etsdev
    HONEYCOMB_DATASET: od2-rails
    HONEYCOMB_SERVICE: od2
    HONEYCOMB_WRITEKEY: buzzzzzzzzzzzzzzzz
    HONEYCOMB_DEBUG: 'true'
    IIIF_SERVER_BASE_URL: http://localhost:8080/iiif
    INGEST_LOCAL_PATH: /data/tmp
    POSTGRES_DB: test
    POSTGRES_PASSWORD: postgres
    RAILS_CACHE_STORE_URL: memcache
    RAILS_ENV: test
    RAILS_LOG_TO_STDOUT: 'true'
    RAILS_SERVE_STATIC_FILES: 'true'
    RAIS_ADDRESS: :8080
    RAIS_IIIFINFOCACHESIZE: '10000'
    RAIS_IIIFURL: http://localhost:8080/iiif
    RAIS_TILEPATH: /var/local/images
    RDS_DB_NAME: postgres
    RDS_HOSTNAME: db-test
    RDS_PASSWORD: postgres
    RDS_PORT: '5432'
    RDS_USERNAME: postgres
    RECAPTCHA_SECRET_KEY: asdfasdfasdfasdfasdfadsfasdfadfsfa
    RECAPTCHA_SITE_KEY: asdfasdfadsfasdfasdfasdfasdfasdfad
    REDIS_HOST: redis-test
    REDIS_PORT: '6379'
    SAML_IDP_CERT: cert
    SAML_ISSUER: http://od2-staging.library.oregonstate.edu/users/auth/saml
    SAML_PRIVATE_KEY: key
    SAML_URL: https://shibboleth-test.uoregon.edu/idp/profile/SAML2/Redirect/SSO
    SECRET_KEY_BASE: asdf
    SELENIUM_DRIVER_URL: http://selenium-hub:4444/wd/hub
    SIDEKIQ_ADMIN_SAFE_URLS: 'http://localhost:3000'
    SOLR_URL: http://solr-test:8983/solr/test
    TRIPLESTORE_ADAPTER_TYPE: blazegraph
    TRIPLESTORE_ADAPTER_URL: http://blazegraph-test:8080/bigdata/namespace/kb/sparql
  tags:
    - docker
  allow_failure: true

staging:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - mkdir -p ~/.kube
    - echo $KUBE_CONFIG | base64 -d > ~/.kube/config
    - echo $STAGING_VALUES | base64 -d > ./chart/staging-values.yaml
    - echo "Deploying registry.gitlab.com/notch8/oregon-digital/app:$CI_COMMIT_SHORT_SHA"
    - ./chart/bin/deploy staging $CI_COMMIT_SHORT_SHA
  tags:
    - docker
  when: manual
