version: '3'

networks:
  ? external
  ? internal

volumes:
  ? db-dev
  ? blazegraph-dev
  ? fcrepo-dev
  ? solr-dev
  ? redis-dev

services:
  ##
  # Basic Rails application build image
  app: &app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/data # mount current directory into the image
    networks:
      ? external
      ? internal
    # use tmpfs for tmp and log for performance and to allow
    # multiple builds in parallel. Both directories are mounted
    # into the image AFTER the working directory is mounted.
    tmpfs:
      - /data/log

  ##
  # Development environment for application
  dev: &dev
    <<: *app
    environment:
      - ACTIVE_JOB_QUEUE_ADAPTER=sidekiq
      - FEDORA_URL=http://fcrepo-dev:8080/fcrepo/rest
      - FITS_PATH=/opt/fits-1.0.5/fits.sh
      - RAILS_CACHE_STORE_URL=memcache
      - RAILS_ENV=development
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - RDS_DB_NAME=postgres
      - RDS_HOSTNAME=db-dev
      - RDS_PASSWORD=postgres
      - RDS_PORT='5432'
      - RDS_USERNAME=postgres
      - REDIS_HOST=redis-dev
      - REDIS_PORT='6379'
      - SECRET_KEY_BASE=asdf
      - SOLR_URL=http://solr-dev:8983/solr/development
      - TRIPLESTORE_ADAPTER_TYPE=blazegraph
      - TRIPLESTORE_ADAPTER_URL=http://blazegraph-dev:8080/bigdata/namespace/rw/sparql
      - HONEYCOMB_DATASET=od2-rails
      - HONEYCOMB_WRITEKEY=fa01b2227f761b5c1f11ae1a680f14da
      - HONEYCOMB_SERVICE=od2
    depends_on:
      - db-dev
      - blazegraph-dev
      - solr-dev
      - fcrepo-dev
      - redis-dev
      - memcache
      - workers
    expose:
      - 3000
  server:
    <<: *dev
    command: >
      bash -c "./build/entrypoint.sh &&
      bundle exec puma -C config/puma/development.rb --dir /data --pidfile /data/tmp/pids/puma.pid -b tcp://0.0.0.0:3000 &&
      tail -f log/development.log"
  workers:
    <<: *dev
    command: bundle exec sidekiq
    depends_on:
      - db-dev
      - blazegraph-dev
      - solr-dev
      - fcrepo-dev
      - redis-dev
      - memcache

  ##
  # Test environment for application
  test: &test
    <<: *app
    environment:
      - ACTIVE_JOB_QUEUE_ADAPTER=sidekiq
      - CAPYBARA_APP_HOST=http://test:3001
      - FEDORA_URL=http://fcrepo-test:8080/fcrepo/rest
      - FITS_PATH=/opt/fits-1.0.5/fits.sh
      - RAILS_CACHE_STORE_URL=memcache
      - RAILS_ENV=test
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - RDS_DB_NAME=postgres
      - RDS_HOSTNAME=db-test
      - RDS_PASSWORD=postgres
      - RDS_PORT='5432'
      - RDS_USERNAME=postgres
      - REDIS_HOST=redis-test
      - REDIS_PORT='6379'
      - SECRET_KEY_BASE=asdf
      - SELENIUM_DRIVER_URL=http://selenium-hub:4444/wd/hub
      - SOLR_URL=http://solr-test:8983/solr/test
      - TRIPLESTORE_ADAPTER_TYPE=blazegraph
      - TRIPLESTORE_ADAPTER_URL=http://blazegraph-test:8080/bigdata/namespace/rw/sparql
      - HONEYCOMB_DATASET=od2-rails
      - HONEYCOMB_WRITEKEY=buzzzzzzzzzzzzzzz
      - HONEYCOMB_SERVICE=od2
    depends_on:
      - chrome
      - selenium-hub
      - db-test
      - blazegraph-test
      - solr-test
      - fcrepo-test
      - redis-test
      - memcache
    volumes:
      - .:/data # mount current directory into the image
      - ./tmp:/tmp
    command: >
      bash -c "./build/entrypoint.sh &&
      puma -b tcp://0.0.0.0:3001 -e test -d &&
      tail -f log/test.log"
    expose:
      - 3001

  ##
  # Selenium and Chrome for System (browser) tests
  selenium-hub:
    image: selenium/hub:3.141.5-astatine
    volumes:
      - ./spec/fixtures:/data/spec/fixtures
    networks:
      ? internal
      ? external
  chrome:
    image: selenium/node-chrome-debug:3.141.5-astatine
    volumes:
      - ./spec/fixtures:/data/spec/fixtures
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
    expose:
      - 5900
    networks:
      ? internal
      ? external

  ##
  # SOLR Index server
  solr: &solr
    image: solr:6-alpine
    command: /opt/solr/bin/solr -cloud -noprompt -f -p 8983
    expose:
      - 8983
    networks:
      ? internal
  solr-dev:
    <<: *solr
    volumes:
      - solr-dev:/opt/solr/server/solr
  solr-test:
    <<: *solr

  ##
  # Fedora repository server
  fcrepo: &fcrepo
    image: ualbertalib/docker-fcrepo4:4.7
    environment:
      - JAVA_OPTS=${JAVA_OPTS} -Dfcrepo.modeshape.configuration="classpath:/config/file-simple/repository.json" -Dfcrepo.object.directory="/data/objects" -Dfcrepo.binary.directory="/data/binaries"
    expose:
      - 8080
    networks:
      ? internal
  fcrepo-dev:
    <<: *fcrepo
    volumes:
      - fcrepo-dev:/data
  fcrepo-test:
    <<: *fcrepo
    tmpfs: /data

  ##
  # Fedora repository server
  blazegraph: &blazegraph
    image: lyrasis/blazegraph:2.1.5
    expose:
      - 8080
    networks:
      ? internal
  blazegraph-dev:
    <<: *blazegraph
    volumes:
      - blazegraph-dev:/var/lib/jetty
      - ./config/blazegraph/RWStore.properties:/RWStore.properties
  blazegraph-test:
    <<: *blazegraph
    volumes:
      - ./config/blazegraph/RWStore.properties:/RWStore.properties
    tmpfs: /var/lib/jetty

  ##
  # Postgres database server
  db: &db
    image: postgres:10-alpine
    networks:
      ? internal
  db-dev:
    <<: *db
    environment:
      - POSTGRES_DB=development
    volumes:
      - db-dev:/var/lib/postgresql/data
  db-test:
    <<: *db
    environment:
      - POSTGRES_DB=test
    tmpfs: /var/lib/postgresql/data

  ##
  # Redis queue server
  redis: &redis
    image: redis:4-alpine
    command: redis-server
    networks:
      ? internal
  redis-dev:
    <<: *redis
    volumes:
      - redis-dev:/data
  redis-test:
    <<: *redis
    tmpfs: /data

  ##
  # Memcache cache server
  memcache:
    image: memcached
    networks:
      ? internal
