version: '2'

volumes:
  fcrepo:
  solr:
  db:
  redis:
  zk1:
  zk2:
  zk3:
  zkconf:
  app:

networks:
  external:
  internal:

services:
  zoo1:
    image: zookeeper
    restart: always
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    expose:
      - 2181
      - 2888
      - 3888
    volumes:
      - zk1:/data
      - zkconf:/conf
    networks:
      internal:
       aliases:
         - zookeeper_cluster
  zoo2:
    image: zookeeper
    restart: always
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    expose:
      - 2181
      - 2888
      - 3888
    volumes:
      - zk2:/data
      - zkconf:/conf
    networks:
      internal:
       aliases:
         - zookeeper_cluster
  zoo3:
    image: zookeeper
    restart: always
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    expose:
      - 2181
      - 2888
      - 3888
    volumes:
      - zk3:/data
      - zkconf:/conf
    networks:
      internal:
       aliases:
         - zookeeper_cluster

  solr:
    image: solr
    command: solr -c -f -z zookeeper_cluster:2181
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    expose:
      - 8983
    volumes:
      - .:/app
      - solr:/opt/solr/server/solr
    networks:
      internal:

  fcrepo:
    image: cbeer/fcrepo4:4.7
    expose:
      - 8080
    volumes:
      - fcrepo:/data
    environment:
      - JAVA_OPTS=${JAVA_OPTS} -Dfcrepo.modeshape.configuration="classpath:/config/file-simple/repository.json" -Dfcrepo.object.directory="/data/objects" -Dfcrepo.binary.directory="/data/binaries"
    networks:
      internal:

  db:
    image: postgres
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      internal:

  app:
    build: .
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=postgresql://postgres@db/postgres
      - FEDORA_URL=http://fcrepo:8080/fcrepo/rest
      - SOLR_URL=http://solr:8983/solr/
      - SETTINGS__ACTIVE_JOB__QUEUE_ADAPTER=sidekiq
      - SETTINGS__SOLR__URL=http://solr:8983/solr/
      - SETTINGS__ZOOKEEPER__CONNECTION_STR=zookeeper_cluster:2181/configs
      - RAILS_ENV=development
      - RAILS_SERVE_STATIC_FILES=true
      - RAILS_LOG_TO_STDOUT=true
      - SECRET_KEY_BASE=asdf
      - RAILS_CACHE_STORE_URL=memcache
    volumes:
      - app:/data/tmp/uploads
    networks:
      internal:

  web:
    extends: app
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -p 3000 -b '0.0.0.0'"
    depends_on:
      - db
      - solr
      - fcrepo
      - redis
      - zoo1
      - zoo2
      - zoo3
      - memcache
      - db_migrate
    expose:
      - 3000

  workers:
    extends: app
    command: bundle exec sidekiq
    environment:
      - SETTINGS__FITS_PATH=/opt/fits-1.0.5/fits.sh
    depends_on:
      - db
      - solr
      - fcrepo
      - redis
      - zoo1
      - zoo2
      - zoo3
      - initialize_app
      - db_migrate

  initialize_app:
    extends: app
    restart: on-failure
    #command: bundle exec rails zookeeper:upload
    command: echo 'Not using Zookeeper'
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  db_migrate:
    extends: app
    restart: on-failure
    command: bundle exec rails db:migrate
    depends_on:
      - db

  lb:
    image: dockercloud/haproxy:1.5.3
    links:
      - web
    environment:
      - DOCKER_TLS_VERIFY
      - DOCKER_HOST
      - DOCKER_CERT_PATH
    ports:
      - 8080:80
      - 8443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # You must uncomment this line if and only if you are running docker-machine
      # - $DOCKER_CERT_PATH:$DOCKER_CERT_PATH
    networks:
      internal:
      external:

  redis:
    image: redis:3
    command: redis-server
    volumes:
      - redis:/data
    networks:
      internal:

  memcache:
    image: memcached
    networks:
      internal:
