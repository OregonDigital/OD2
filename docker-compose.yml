version: "3"

networks:
  external:
  internal:

volumes:
  db-dev:
  fcrepo-dev:
  solr-dev:
  redis-dev:

services:
  app: &app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/data # mount current directory into the image
    expose:
      - 3000
    networks:
      external:
      internal:
    # use tmpfs for tmp and log for performance and to allow
    # multiple builds in parallel. Both directories are mounted
    # into the image AFTER the working directory is mounted.
    tmpfs:
      - /data/log

  dev: &dev
    <<: *app
    environment:
      - ACTIVE_JOB_QUEUE_ADAPTER=sidekiq
      - FEDORA_URL=http://fcrepo-dev:8080/fcrepo/rest
      - FITS_PATH=/opt/fits-1.0.5/fits.sh
      - RAILS_CACHE_STORE_URL=memcache
      - RAILS_ENV=development
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - RDS_DB_NAME=postgres
      - RDS_HOSTNAME=db-dev
      - RDS_PASSWORD=postgres
      - RDS_PORT='5432'
      - RDS_USERNAME=postgres
      - REDIS_HOST=redis-dev
      - SECRET_KEY_BASE=asdf
      - SELENIUM_DRIVER_URL=http://chrome:4444/wd/hub
      - SOLR_URL=http://solr-dev:8983/solr/development
    depends_on:
      - chrome
      - db-dev
      - solr-dev
      - fcrepo-dev
      - redis-dev
      - memcache
  server:
    <<: *dev
    command: bash -c "./build/validate-migrated.sh && bundle exec puma -C config/puma/development.rb"
    ports:
      - 3000:3000

  test: &test
    <<: *app
    environment:
      - ACTIVE_JOB_QUEUE_ADAPTER=sidekiq
      - FEDORA_URL=http://fcrepo-test:8080/fcrepo/rest
      - FITS_PATH=/opt/fits-1.0.5/fits.sh
      - RAILS_CACHE_STORE_URL=memcache
      - RAILS_ENV=test
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - RDS_DB_NAME=postgres
      - RDS_HOSTNAME=db-test
      - RDS_PASSWORD=postgres
      - RDS_PORT='5432'
      - RDS_USERNAME=postgres
      - REDIS_HOST=redis-test
      - SECRET_KEY_BASE=asdf
      - SELENIUM_DRIVER_URL=http://selenium-hub:4444/wd/hub
      - SOLR_URL=http://solr-test:8983/solr/test
    depends_on:
      - chrome
      - selenium-hub
      - db-test
      - solr-test
      - fcrepo-test
      - redis-test
      - memcache
    volumes:
      - .:/data # mount current directory into the image
      - ./tmp:/tmp
    command: bash -c "./build/validate_migrated.sh && puma -C config/puma/test.rb -d && tail -f log/test.log"
    expose:
      - 3001
    ports:
      - 3001:3001
    networks:
      external:
      internal:

  #  spring:
  #    <<: *test
  #    command: bash -c "./build/validate-migrated.sh && bundle exec spring server"

  selenium-hub:
    image: selenium/hub:3.141.5-astatine
    ports:
      - "4444:4444"
    networks:
      internal:
      external:
  chrome:
    image: selenium/node-chrome-debug:3.141.5-astatine
    volumes:
      - ./spec/fixtures:/data/spec/fixtures
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
    expose:
      - 5900
    ports:
      - 5900:5900
    networks:
      internal:
      external:

  solr: &solr
    image: solr
    expose:
      - 8983
    networks:
      internal:
  solr-dev:
    <<: *solr
    volumes:
      - solr-dev:/opt/solr/server/solr/mycores
      - ./solr/conf:/opt/solr/server/solr/configsets/_default/conf
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - development
  solr-test:
    <<: *solr
    volumes:
      - ./tmp/solr/mycores:/opt/solr/server/solr/mycores
      - ./solr/conf:/opt/solr/server/solr/configsets/_default/conf
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - test

  fcrepo: &fcrepo
    image: cbeer/fcrepo4:4.7
    environment:
      - JAVA_OPTS=${JAVA_OPTS} -Dfcrepo.modeshape.configuration="classpath:/config/file-simple/repository.json" -Dfcrepo.object.directory="/data/objects" -Dfcrepo.binary.directory="/data/binaries"
    expose:
      - 8080
    networks:
      internal:
  fcrepo-dev:
    <<: *fcrepo
    volumes:
      - fcrepo-dev:/data
  fcrepo-test:
    <<: *fcrepo
    tmpfs: /data

  db: &db
    image: postgres
    networks:
      internal:
  db-dev:
    <<: *db
    environment:
      - POSTGRES_DB=development
    volumes:
      - db-dev:/var/lib/postgresql/data
  db-test:
    <<: *db
    environment:
      - POSTGRES_DB=test
    tmpfs: /var/lib/postgresql/data

  workers:
    <<: *app
    command: bundle exec sidekiq
    depends_on:
      - db-dev
      - solr-dev
      - fcrepo-dev
      - redis-dev
      - memcache

  redis: &redis
    image: redis:3
    command: redis-server
    networks:
      internal:
  redis-dev:
    <<: *redis
    volumes:
      - redis-dev:/data
  redis-test:
    <<: *redis
    tmpfs: /data

  memcache:
    image: memcached
    networks:
      internal:
